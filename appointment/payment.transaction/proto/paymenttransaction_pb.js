// source: paymenttransaction.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.appointment.PaymentTransaction', null, global);
goog.exportSymbol('proto.appointment.PaymentTransactionCreateModel', null, global);
goog.exportSymbol('proto.appointment.PaymentTransactionCreateResponse', null, global);
goog.exportSymbol('proto.appointment.PaymentTransactionDeleteModel', null, global);
goog.exportSymbol('proto.appointment.PaymentTransactionDeleteResponse', null, global);
goog.exportSymbol('proto.appointment.PaymentTransactionGetByIdModel', null, global);
goog.exportSymbol('proto.appointment.PaymentTransactionGetByIdResponse', null, global);
goog.exportSymbol('proto.appointment.PaymentTransactionSearchModel', null, global);
goog.exportSymbol('proto.appointment.PaymentTransactionSearchResponse', null, global);
goog.exportSymbol('proto.appointment.PaymentTransactionSearchResponseItem', null, global);
goog.exportSymbol('proto.appointment.PaymentTransactionUpdateModel', null, global);
goog.exportSymbol('proto.appointment.PaymentTransactionUpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.PaymentTransaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransaction.displayName = 'proto.appointment.PaymentTransaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransactionCreateModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.PaymentTransactionCreateModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransactionCreateModel.displayName = 'proto.appointment.PaymentTransactionCreateModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransactionGetByIdModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.PaymentTransactionGetByIdModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransactionGetByIdModel.displayName = 'proto.appointment.PaymentTransactionGetByIdModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransactionGetByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.PaymentTransactionGetByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransactionGetByIdResponse.displayName = 'proto.appointment.PaymentTransactionGetByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransactionCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.PaymentTransactionCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransactionCreateResponse.displayName = 'proto.appointment.PaymentTransactionCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransactionUpdateModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.PaymentTransactionUpdateModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransactionUpdateModel.displayName = 'proto.appointment.PaymentTransactionUpdateModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransactionUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.PaymentTransactionUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransactionUpdateResponse.displayName = 'proto.appointment.PaymentTransactionUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransactionSearchModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.PaymentTransactionSearchModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransactionSearchModel.displayName = 'proto.appointment.PaymentTransactionSearchModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransactionSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.appointment.PaymentTransactionSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.appointment.PaymentTransactionSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransactionSearchResponse.displayName = 'proto.appointment.PaymentTransactionSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransactionSearchResponseItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.PaymentTransactionSearchResponseItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransactionSearchResponseItem.displayName = 'proto.appointment.PaymentTransactionSearchResponseItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransactionDeleteModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.PaymentTransactionDeleteModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransactionDeleteModel.displayName = 'proto.appointment.PaymentTransactionDeleteModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.PaymentTransactionDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.PaymentTransactionDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.PaymentTransactionDeleteResponse.displayName = 'proto.appointment.PaymentTransactionDeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransaction.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    externalid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    status: jspb.Message.getFieldWithDefault(msg, 7, ""),
    iscomplete: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    initiatedon: jspb.Message.getFieldWithDefault(msg, 9, ""),
    completedon: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransaction}
 */
proto.appointment.PaymentTransaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransaction;
  return proto.appointment.PaymentTransaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransaction}
 */
proto.appointment.PaymentTransaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalamount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscomplete(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitiatedon(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompletedon(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalamount();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIscomplete();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getInitiatedon();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCompletedon();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.PaymentTransaction.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransaction} returns this
 */
proto.appointment.PaymentTransaction.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.PaymentTransaction.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransaction} returns this
 */
proto.appointment.PaymentTransaction.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string CustomerId = 3;
 * @return {string}
 */
proto.appointment.PaymentTransaction.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransaction} returns this
 */
proto.appointment.PaymentTransaction.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float TotalAmount = 4;
 * @return {number}
 */
proto.appointment.PaymentTransaction.prototype.getTotalamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransaction} returns this
 */
proto.appointment.PaymentTransaction.prototype.setTotalamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string ExternalId = 5;
 * @return {string}
 */
proto.appointment.PaymentTransaction.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransaction} returns this
 */
proto.appointment.PaymentTransaction.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Currency = 6;
 * @return {string}
 */
proto.appointment.PaymentTransaction.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransaction} returns this
 */
proto.appointment.PaymentTransaction.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Status = 7;
 * @return {string}
 */
proto.appointment.PaymentTransaction.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransaction} returns this
 */
proto.appointment.PaymentTransaction.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool IsComplete = 8;
 * @return {boolean}
 */
proto.appointment.PaymentTransaction.prototype.getIscomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransaction} returns this
 */
proto.appointment.PaymentTransaction.prototype.setIscomplete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string InitiatedOn = 9;
 * @return {string}
 */
proto.appointment.PaymentTransaction.prototype.getInitiatedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransaction} returns this
 */
proto.appointment.PaymentTransaction.prototype.setInitiatedon = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string CompletedOn = 10;
 * @return {string}
 */
proto.appointment.PaymentTransaction.prototype.getCompletedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransaction} returns this
 */
proto.appointment.PaymentTransaction.prototype.setCompletedon = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool IsActive = 11;
 * @return {boolean}
 */
proto.appointment.PaymentTransaction.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransaction} returns this
 */
proto.appointment.PaymentTransaction.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransactionCreateModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransactionCreateModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionCreateModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    totalamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    externalid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 5, ""),
    status: jspb.Message.getFieldWithDefault(msg, 6, ""),
    iscomplete: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    initiatedon: jspb.Message.getFieldWithDefault(msg, 8, ""),
    completedon: jspb.Message.getFieldWithDefault(msg, 9, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransactionCreateModel}
 */
proto.appointment.PaymentTransactionCreateModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransactionCreateModel;
  return proto.appointment.PaymentTransactionCreateModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransactionCreateModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransactionCreateModel}
 */
proto.appointment.PaymentTransactionCreateModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalamount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscomplete(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitiatedon(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompletedon(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransactionCreateModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransactionCreateModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionCreateModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalamount();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIscomplete();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getInitiatedon();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCompletedon();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string BusinessNodeId = 1;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateModel} returns this
 */
proto.appointment.PaymentTransactionCreateModel.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string CustomerId = 2;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateModel} returns this
 */
proto.appointment.PaymentTransactionCreateModel.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float TotalAmount = 3;
 * @return {number}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.getTotalamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransactionCreateModel} returns this
 */
proto.appointment.PaymentTransactionCreateModel.prototype.setTotalamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string ExternalId = 4;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateModel} returns this
 */
proto.appointment.PaymentTransactionCreateModel.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Currency = 5;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateModel} returns this
 */
proto.appointment.PaymentTransactionCreateModel.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Status = 6;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateModel} returns this
 */
proto.appointment.PaymentTransactionCreateModel.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool IsComplete = 7;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.getIscomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionCreateModel} returns this
 */
proto.appointment.PaymentTransactionCreateModel.prototype.setIscomplete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string InitiatedOn = 8;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.getInitiatedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateModel} returns this
 */
proto.appointment.PaymentTransactionCreateModel.prototype.setInitiatedon = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string CompletedOn = 9;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.getCompletedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateModel} returns this
 */
proto.appointment.PaymentTransactionCreateModel.prototype.setCompletedon = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool IsActive = 10;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionCreateModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionCreateModel} returns this
 */
proto.appointment.PaymentTransactionCreateModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransactionGetByIdModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransactionGetByIdModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransactionGetByIdModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionGetByIdModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransactionGetByIdModel}
 */
proto.appointment.PaymentTransactionGetByIdModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransactionGetByIdModel;
  return proto.appointment.PaymentTransactionGetByIdModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransactionGetByIdModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransactionGetByIdModel}
 */
proto.appointment.PaymentTransactionGetByIdModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransactionGetByIdModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransactionGetByIdModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransactionGetByIdModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionGetByIdModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.PaymentTransactionGetByIdModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionGetByIdModel} returns this
 */
proto.appointment.PaymentTransactionGetByIdModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransactionGetByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransactionGetByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionGetByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    externalid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    status: jspb.Message.getFieldWithDefault(msg, 7, ""),
    iscomplete: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    initiatedon: jspb.Message.getFieldWithDefault(msg, 9, ""),
    completedon: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse}
 */
proto.appointment.PaymentTransactionGetByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransactionGetByIdResponse;
  return proto.appointment.PaymentTransactionGetByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransactionGetByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse}
 */
proto.appointment.PaymentTransactionGetByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalamount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscomplete(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitiatedon(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompletedon(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransactionGetByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransactionGetByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionGetByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalamount();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIscomplete();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getInitiatedon();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCompletedon();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse} returns this
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse} returns this
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string CustomerId = 3;
 * @return {string}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse} returns this
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float TotalAmount = 4;
 * @return {number}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.getTotalamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse} returns this
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.setTotalamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string ExternalId = 5;
 * @return {string}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse} returns this
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Currency = 6;
 * @return {string}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse} returns this
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Status = 7;
 * @return {string}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse} returns this
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool IsComplete = 8;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.getIscomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse} returns this
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.setIscomplete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string InitiatedOn = 9;
 * @return {string}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.getInitiatedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse} returns this
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.setInitiatedon = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string CompletedOn = 10;
 * @return {string}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.getCompletedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse} returns this
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.setCompletedon = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool IsActive = 11;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionGetByIdResponse} returns this
 */
proto.appointment.PaymentTransactionGetByIdResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransactionCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransactionCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    externalid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    status: jspb.Message.getFieldWithDefault(msg, 7, ""),
    iscomplete: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    initiatedon: jspb.Message.getFieldWithDefault(msg, 9, ""),
    completedon: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransactionCreateResponse}
 */
proto.appointment.PaymentTransactionCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransactionCreateResponse;
  return proto.appointment.PaymentTransactionCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransactionCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransactionCreateResponse}
 */
proto.appointment.PaymentTransactionCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalamount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscomplete(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitiatedon(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompletedon(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransactionCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransactionCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalamount();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIscomplete();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getInitiatedon();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCompletedon();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateResponse} returns this
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateResponse} returns this
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string CustomerId = 3;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateResponse} returns this
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float TotalAmount = 4;
 * @return {number}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.getTotalamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransactionCreateResponse} returns this
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.setTotalamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string ExternalId = 5;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateResponse} returns this
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Currency = 6;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateResponse} returns this
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Status = 7;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateResponse} returns this
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool IsComplete = 8;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.getIscomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionCreateResponse} returns this
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.setIscomplete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string InitiatedOn = 9;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.getInitiatedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateResponse} returns this
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.setInitiatedon = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string CompletedOn = 10;
 * @return {string}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.getCompletedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionCreateResponse} returns this
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.setCompletedon = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool IsActive = 11;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionCreateResponse} returns this
 */
proto.appointment.PaymentTransactionCreateResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransactionUpdateModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransactionUpdateModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionUpdateModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    externalid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    status: jspb.Message.getFieldWithDefault(msg, 7, ""),
    iscomplete: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    initiatedon: jspb.Message.getFieldWithDefault(msg, 9, ""),
    completedon: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransactionUpdateModel}
 */
proto.appointment.PaymentTransactionUpdateModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransactionUpdateModel;
  return proto.appointment.PaymentTransactionUpdateModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransactionUpdateModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransactionUpdateModel}
 */
proto.appointment.PaymentTransactionUpdateModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalamount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscomplete(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitiatedon(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompletedon(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransactionUpdateModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransactionUpdateModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionUpdateModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalamount();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIscomplete();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getInitiatedon();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCompletedon();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateModel} returns this
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateModel} returns this
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string CustomerId = 3;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateModel} returns this
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float TotalAmount = 4;
 * @return {number}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.getTotalamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransactionUpdateModel} returns this
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.setTotalamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string ExternalId = 5;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateModel} returns this
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Currency = 6;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateModel} returns this
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Status = 7;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateModel} returns this
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool IsComplete = 8;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.getIscomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionUpdateModel} returns this
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.setIscomplete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string InitiatedOn = 9;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.getInitiatedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateModel} returns this
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.setInitiatedon = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string CompletedOn = 10;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.getCompletedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateModel} returns this
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.setCompletedon = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool IsActive = 11;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionUpdateModel} returns this
 */
proto.appointment.PaymentTransactionUpdateModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransactionUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransactionUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    externalid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    status: jspb.Message.getFieldWithDefault(msg, 7, ""),
    iscomplete: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    initiatedon: jspb.Message.getFieldWithDefault(msg, 9, ""),
    completedon: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 11, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransactionUpdateResponse}
 */
proto.appointment.PaymentTransactionUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransactionUpdateResponse;
  return proto.appointment.PaymentTransactionUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransactionUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransactionUpdateResponse}
 */
proto.appointment.PaymentTransactionUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalamount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscomplete(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitiatedon(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompletedon(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransactionUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransactionUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalamount();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIscomplete();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getInitiatedon();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCompletedon();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateResponse} returns this
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateResponse} returns this
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string CustomerId = 3;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateResponse} returns this
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float TotalAmount = 4;
 * @return {number}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.getTotalamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransactionUpdateResponse} returns this
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.setTotalamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string ExternalId = 5;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateResponse} returns this
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Currency = 6;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateResponse} returns this
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Status = 7;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateResponse} returns this
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool IsComplete = 8;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.getIscomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionUpdateResponse} returns this
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.setIscomplete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string InitiatedOn = 9;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.getInitiatedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateResponse} returns this
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.setInitiatedon = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string CompletedOn = 10;
 * @return {string}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.getCompletedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionUpdateResponse} returns this
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.setCompletedon = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool IsActive = 11;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionUpdateResponse} returns this
 */
proto.appointment.PaymentTransactionUpdateResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransactionSearchModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransactionSearchModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransactionSearchModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionSearchModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransactionSearchModel}
 */
proto.appointment.PaymentTransactionSearchModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransactionSearchModel;
  return proto.appointment.PaymentTransactionSearchModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransactionSearchModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransactionSearchModel}
 */
proto.appointment.PaymentTransactionSearchModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransactionSearchModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransactionSearchModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransactionSearchModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionSearchModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string businessNodeId = 1;
 * @return {string}
 */
proto.appointment.PaymentTransactionSearchModel.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionSearchModel} returns this
 */
proto.appointment.PaymentTransactionSearchModel.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string customerId = 2;
 * @return {string}
 */
proto.appointment.PaymentTransactionSearchModel.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionSearchModel} returns this
 */
proto.appointment.PaymentTransactionSearchModel.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isActive = 3;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionSearchModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionSearchModel} returns this
 */
proto.appointment.PaymentTransactionSearchModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.appointment.PaymentTransactionSearchResponse.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransactionSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransactionSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    retrievedcount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageindex: jspb.Message.getFieldWithDefault(msg, 3, 0),
    itemsperpage: jspb.Message.getFieldWithDefault(msg, 4, 0),
    order: jspb.Message.getFieldWithDefault(msg, 5, ""),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.appointment.PaymentTransactionSearchResponseItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransactionSearchResponse}
 */
proto.appointment.PaymentTransactionSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransactionSearchResponse;
  return proto.appointment.PaymentTransactionSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransactionSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransactionSearchResponse}
 */
proto.appointment.PaymentTransactionSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetrievedcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageindex(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setItemsperpage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrder(value);
      break;
    case 6:
      var value = new proto.appointment.PaymentTransactionSearchResponseItem;
      reader.readMessage(value,proto.appointment.PaymentTransactionSearchResponseItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransactionSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransactionSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRetrievedcount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPageindex();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getItemsperpage();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOrder();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.appointment.PaymentTransactionSearchResponseItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 TotalCount = 1;
 * @return {number}
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.getTotalcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransactionSearchResponse} returns this
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.setTotalcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 RetrievedCount = 2;
 * @return {number}
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.getRetrievedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransactionSearchResponse} returns this
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.setRetrievedcount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 PageIndex = 3;
 * @return {number}
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.getPageindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransactionSearchResponse} returns this
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.setPageindex = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 ItemsPerPage = 4;
 * @return {number}
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.getItemsperpage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransactionSearchResponse} returns this
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.setItemsperpage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string Order = 5;
 * @return {string}
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.getOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionSearchResponse} returns this
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.setOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated PaymentTransactionSearchResponseItem Items = 6;
 * @return {!Array<!proto.appointment.PaymentTransactionSearchResponseItem>}
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.appointment.PaymentTransactionSearchResponseItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.appointment.PaymentTransactionSearchResponseItem, 6));
};


/**
 * @param {!Array<!proto.appointment.PaymentTransactionSearchResponseItem>} value
 * @return {!proto.appointment.PaymentTransactionSearchResponse} returns this
*/
proto.appointment.PaymentTransactionSearchResponse.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.appointment.PaymentTransactionSearchResponseItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem}
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.appointment.PaymentTransactionSearchResponseItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.appointment.PaymentTransactionSearchResponse} returns this
 */
proto.appointment.PaymentTransactionSearchResponse.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransactionSearchResponseItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransactionSearchResponseItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionSearchResponseItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    customerid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    totalamount: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    externalid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    currency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    status: jspb.Message.getFieldWithDefault(msg, 7, ""),
    iscomplete: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    initiatedon: jspb.Message.getFieldWithDefault(msg, 9, ""),
    completedon: jspb.Message.getFieldWithDefault(msg, 10, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deletedat: (f = msg.getDeletedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem}
 */
proto.appointment.PaymentTransactionSearchResponseItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransactionSearchResponseItem;
  return proto.appointment.PaymentTransactionSearchResponseItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransactionSearchResponseItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem}
 */
proto.appointment.PaymentTransactionSearchResponseItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomerid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalamount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIscomplete(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitiatedon(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompletedon(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransactionSearchResponseItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransactionSearchResponseItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionSearchResponseItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCustomerid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTotalamount();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getExternalid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIscomplete();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getInitiatedon();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCompletedon();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeletedat();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string CustomerId = 3;
 * @return {string}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getCustomerid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setCustomerid = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional float TotalAmount = 4;
 * @return {number}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getTotalamount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setTotalamount = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string ExternalId = 5;
 * @return {string}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getExternalid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setExternalid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Currency = 6;
 * @return {string}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Status = 7;
 * @return {string}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool IsComplete = 8;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getIscomplete = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setIscomplete = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string InitiatedOn = 9;
 * @return {string}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getInitiatedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setInitiatedon = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string CompletedOn = 10;
 * @return {string}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getCompletedon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setCompletedon = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool IsActive = 11;
 * @return {boolean}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
*/
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp UpdatedAt = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
*/
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional google.protobuf.Timestamp DeletedAt = 14;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.getDeletedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
*/
proto.appointment.PaymentTransactionSearchResponseItem.prototype.setDeletedat = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.PaymentTransactionSearchResponseItem} returns this
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.clearDeletedat = function() {
  return this.setDeletedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.PaymentTransactionSearchResponseItem.prototype.hasDeletedat = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransactionDeleteModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransactionDeleteModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransactionDeleteModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionDeleteModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransactionDeleteModel}
 */
proto.appointment.PaymentTransactionDeleteModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransactionDeleteModel;
  return proto.appointment.PaymentTransactionDeleteModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransactionDeleteModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransactionDeleteModel}
 */
proto.appointment.PaymentTransactionDeleteModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransactionDeleteModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransactionDeleteModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransactionDeleteModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionDeleteModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.PaymentTransactionDeleteModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.PaymentTransactionDeleteModel} returns this
 */
proto.appointment.PaymentTransactionDeleteModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.PaymentTransactionDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.PaymentTransactionDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.PaymentTransactionDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.PaymentTransactionDeleteResponse}
 */
proto.appointment.PaymentTransactionDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.PaymentTransactionDeleteResponse;
  return proto.appointment.PaymentTransactionDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.PaymentTransactionDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.PaymentTransactionDeleteResponse}
 */
proto.appointment.PaymentTransactionDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.PaymentTransactionDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.PaymentTransactionDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.PaymentTransactionDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.PaymentTransactionDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.appointment.PaymentTransactionDeleteResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.PaymentTransactionDeleteResponse} returns this
 */
proto.appointment.PaymentTransactionDeleteResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.appointment);
