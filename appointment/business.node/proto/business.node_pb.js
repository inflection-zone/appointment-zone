// source: business.node.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.appointment.BusinessNode', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeCreateModel', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeCreateResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeDeleteModel', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeDeleteResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeGetByIdModel', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeGetByIdResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeSearchModel', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeSearchResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeSearchResponseItem', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeUpdateModel', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeUpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNode.displayName = 'proto.appointment.BusinessNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeCreateModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeCreateModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeCreateModel.displayName = 'proto.appointment.BusinessNodeCreateModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeGetByIdModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeGetByIdModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeGetByIdModel.displayName = 'proto.appointment.BusinessNodeGetByIdModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeGetByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeGetByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeGetByIdResponse.displayName = 'proto.appointment.BusinessNodeGetByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeCreateResponse.displayName = 'proto.appointment.BusinessNodeCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeUpdateModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeUpdateModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeUpdateModel.displayName = 'proto.appointment.BusinessNodeUpdateModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeUpdateResponse.displayName = 'proto.appointment.BusinessNodeUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeSearchModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeSearchModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeSearchModel.displayName = 'proto.appointment.BusinessNodeSearchModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.appointment.BusinessNodeSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.appointment.BusinessNodeSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeSearchResponse.displayName = 'proto.appointment.BusinessNodeSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeSearchResponseItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeSearchResponseItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeSearchResponseItem.displayName = 'proto.appointment.BusinessNodeSearchResponseItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeDeleteModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeDeleteModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeDeleteModel.displayName = 'proto.appointment.BusinessNodeDeleteModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeDeleteResponse.displayName = 'proto.appointment.BusinessNodeDeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNode.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, ""),
    displaypicture: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    longitude: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lattitude: jspb.Message.getFieldWithDefault(msg, 9, ""),
    overallrating: jspb.Message.getFieldWithDefault(msg, 10, 0),
    allowwalkinappointments: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    allowfuturebookingfor: jspb.Message.getFieldWithDefault(msg, 12, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNode}
 */
proto.appointment.BusinessNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNode;
  return proto.appointment.BusinessNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNode}
 */
proto.appointment.BusinessNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaypicture(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLongitude(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLattitude(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOverallrating(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowwalkinappointments(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllowfuturebookingfor(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplaypicture();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLongitude();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLattitude();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOverallrating();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getAllowwalkinappointments();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getAllowfuturebookingfor();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNode.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessId = 2;
 * @return {string}
 */
proto.appointment.BusinessNode.prototype.getBusinessid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setBusinessid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessNode.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Mobile = 4;
 * @return {string}
 */
proto.appointment.BusinessNode.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Email = 5;
 * @return {string}
 */
proto.appointment.BusinessNode.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string DisplayPicture = 6;
 * @return {string}
 */
proto.appointment.BusinessNode.prototype.getDisplaypicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setDisplaypicture = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Address = 7;
 * @return {string}
 */
proto.appointment.BusinessNode.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Longitude = 8;
 * @return {string}
 */
proto.appointment.BusinessNode.prototype.getLongitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string Lattitude = 9;
 * @return {string}
 */
proto.appointment.BusinessNode.prototype.getLattitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setLattitude = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 OverallRating = 10;
 * @return {number}
 */
proto.appointment.BusinessNode.prototype.getOverallrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setOverallrating = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool AllowWalkinAppointments = 11;
 * @return {boolean}
 */
proto.appointment.BusinessNode.prototype.getAllowwalkinappointments = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setAllowwalkinappointments = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string AllowFutureBookingFor = 12;
 * @return {string}
 */
proto.appointment.BusinessNode.prototype.getAllowfuturebookingfor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setAllowfuturebookingfor = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool IsActive = 13;
 * @return {boolean}
 */
proto.appointment.BusinessNode.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNode} returns this
 */
proto.appointment.BusinessNode.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeCreateModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeCreateModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeCreateModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeCreateModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 3, ""),
    email: jspb.Message.getFieldWithDefault(msg, 4, ""),
    displaypicture: jspb.Message.getFieldWithDefault(msg, 5, ""),
    address: jspb.Message.getFieldWithDefault(msg, 6, ""),
    longitude: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lattitude: jspb.Message.getFieldWithDefault(msg, 8, ""),
    overallrating: jspb.Message.getFieldWithDefault(msg, 9, 0),
    allowwalkinappointments: jspb.Message.getBooleanFieldWithDefault(msg, 10, false),
    allowfuturebookingfor: jspb.Message.getFieldWithDefault(msg, 11, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 12, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeCreateModel}
 */
proto.appointment.BusinessNodeCreateModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeCreateModel;
  return proto.appointment.BusinessNodeCreateModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeCreateModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeCreateModel}
 */
proto.appointment.BusinessNodeCreateModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaypicture(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLongitude(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLattitude(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOverallrating(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowwalkinappointments(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllowfuturebookingfor(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeCreateModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeCreateModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeCreateModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeCreateModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDisplaypicture();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLongitude();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLattitude();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOverallrating();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getAllowwalkinappointments();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getAllowfuturebookingfor();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
};


/**
 * optional string BusinessId = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getBusinessid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setBusinessid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Mobile = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Email = 4;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string DisplayPicture = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getDisplaypicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setDisplaypicture = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string Address = 6;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Longitude = 7;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getLongitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Lattitude = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getLattitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setLattitude = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 OverallRating = 9;
 * @return {number}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getOverallrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setOverallrating = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool AllowWalkinAppointments = 10;
 * @return {boolean}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getAllowwalkinappointments = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setAllowwalkinappointments = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string AllowFutureBookingFor = 11;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getAllowfuturebookingfor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setAllowfuturebookingfor = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool IsActive = 12;
 * @return {boolean}
 */
proto.appointment.BusinessNodeCreateModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeCreateModel} returns this
 */
proto.appointment.BusinessNodeCreateModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeGetByIdModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeGetByIdModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeGetByIdModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeGetByIdModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeGetByIdModel}
 */
proto.appointment.BusinessNodeGetByIdModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeGetByIdModel;
  return proto.appointment.BusinessNodeGetByIdModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeGetByIdModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeGetByIdModel}
 */
proto.appointment.BusinessNodeGetByIdModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeGetByIdModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeGetByIdModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeGetByIdModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeGetByIdModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeGetByIdModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeGetByIdModel} returns this
 */
proto.appointment.BusinessNodeGetByIdModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeGetByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeGetByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeGetByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, ""),
    displaypicture: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    longitude: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lattitude: jspb.Message.getFieldWithDefault(msg, 9, ""),
    overallrating: jspb.Message.getFieldWithDefault(msg, 10, 0),
    allowwalkinappointments: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    allowfuturebookingfor: jspb.Message.getFieldWithDefault(msg, 12, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeGetByIdResponse}
 */
proto.appointment.BusinessNodeGetByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeGetByIdResponse;
  return proto.appointment.BusinessNodeGetByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeGetByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeGetByIdResponse}
 */
proto.appointment.BusinessNodeGetByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaypicture(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLongitude(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLattitude(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOverallrating(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowwalkinappointments(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllowfuturebookingfor(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeGetByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeGetByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeGetByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplaypicture();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLongitude();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLattitude();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOverallrating();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getAllowwalkinappointments();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getAllowfuturebookingfor();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessId = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getBusinessid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setBusinessid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Mobile = 4;
 * @return {string}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Email = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string DisplayPicture = 6;
 * @return {string}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getDisplaypicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setDisplaypicture = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Address = 7;
 * @return {string}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Longitude = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getLongitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string Lattitude = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getLattitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setLattitude = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 OverallRating = 10;
 * @return {number}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getOverallrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setOverallrating = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool AllowWalkinAppointments = 11;
 * @return {boolean}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getAllowwalkinappointments = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setAllowwalkinappointments = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string AllowFutureBookingFor = 12;
 * @return {string}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getAllowfuturebookingfor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setAllowfuturebookingfor = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool IsActive = 13;
 * @return {boolean}
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeGetByIdResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, ""),
    displaypicture: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    longitude: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lattitude: jspb.Message.getFieldWithDefault(msg, 9, ""),
    overallrating: jspb.Message.getFieldWithDefault(msg, 10, 0),
    allowwalkinappointments: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    allowfuturebookingfor: jspb.Message.getFieldWithDefault(msg, 12, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeCreateResponse}
 */
proto.appointment.BusinessNodeCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeCreateResponse;
  return proto.appointment.BusinessNodeCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeCreateResponse}
 */
proto.appointment.BusinessNodeCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaypicture(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLongitude(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLattitude(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOverallrating(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowwalkinappointments(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllowfuturebookingfor(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplaypicture();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLongitude();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLattitude();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOverallrating();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getAllowwalkinappointments();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getAllowfuturebookingfor();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessId = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getBusinessid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setBusinessid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Mobile = 4;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Email = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string DisplayPicture = 6;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getDisplaypicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setDisplaypicture = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Address = 7;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Longitude = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getLongitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string Lattitude = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getLattitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setLattitude = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 OverallRating = 10;
 * @return {number}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getOverallrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setOverallrating = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool AllowWalkinAppointments = 11;
 * @return {boolean}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getAllowwalkinappointments = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setAllowwalkinappointments = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string AllowFutureBookingFor = 12;
 * @return {string}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getAllowfuturebookingfor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setAllowfuturebookingfor = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool IsActive = 13;
 * @return {boolean}
 */
proto.appointment.BusinessNodeCreateResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeCreateResponse} returns this
 */
proto.appointment.BusinessNodeCreateResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeUpdateModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeUpdateModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeUpdateModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, ""),
    displaypicture: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    longitude: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lattitude: jspb.Message.getFieldWithDefault(msg, 9, ""),
    overallrating: jspb.Message.getFieldWithDefault(msg, 10, 0),
    allowwalkinappointments: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    allowfuturebookingfor: jspb.Message.getFieldWithDefault(msg, 12, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeUpdateModel}
 */
proto.appointment.BusinessNodeUpdateModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeUpdateModel;
  return proto.appointment.BusinessNodeUpdateModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeUpdateModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeUpdateModel}
 */
proto.appointment.BusinessNodeUpdateModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaypicture(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLongitude(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLattitude(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOverallrating(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowwalkinappointments(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllowfuturebookingfor(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeUpdateModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeUpdateModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeUpdateModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplaypicture();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLongitude();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLattitude();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOverallrating();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getAllowwalkinappointments();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getAllowfuturebookingfor();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessId = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getBusinessid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setBusinessid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Mobile = 4;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Email = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string DisplayPicture = 6;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getDisplaypicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setDisplaypicture = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Address = 7;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Longitude = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getLongitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string Lattitude = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getLattitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setLattitude = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 OverallRating = 10;
 * @return {number}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getOverallrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setOverallrating = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool AllowWalkinAppointments = 11;
 * @return {boolean}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getAllowwalkinappointments = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setAllowwalkinappointments = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string AllowFutureBookingFor = 12;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getAllowfuturebookingfor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setAllowfuturebookingfor = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool IsActive = 13;
 * @return {boolean}
 */
proto.appointment.BusinessNodeUpdateModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeUpdateModel} returns this
 */
proto.appointment.BusinessNodeUpdateModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, ""),
    displaypicture: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    longitude: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lattitude: jspb.Message.getFieldWithDefault(msg, 9, ""),
    overallrating: jspb.Message.getFieldWithDefault(msg, 10, 0),
    allowwalkinappointments: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    allowfuturebookingfor: jspb.Message.getFieldWithDefault(msg, 12, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeUpdateResponse}
 */
proto.appointment.BusinessNodeUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeUpdateResponse;
  return proto.appointment.BusinessNodeUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeUpdateResponse}
 */
proto.appointment.BusinessNodeUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaypicture(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLongitude(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLattitude(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOverallrating(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowwalkinappointments(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllowfuturebookingfor(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplaypicture();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLongitude();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLattitude();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOverallrating();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getAllowwalkinappointments();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getAllowfuturebookingfor();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessId = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getBusinessid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setBusinessid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Mobile = 4;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Email = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string DisplayPicture = 6;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getDisplaypicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setDisplaypicture = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Address = 7;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Longitude = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getLongitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string Lattitude = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getLattitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setLattitude = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 OverallRating = 10;
 * @return {number}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getOverallrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setOverallrating = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool AllowWalkinAppointments = 11;
 * @return {boolean}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getAllowwalkinappointments = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setAllowwalkinappointments = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string AllowFutureBookingFor = 12;
 * @return {string}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getAllowfuturebookingfor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setAllowfuturebookingfor = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool IsActive = 13;
 * @return {boolean}
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeUpdateResponse} returns this
 */
proto.appointment.BusinessNodeUpdateResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeSearchModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeSearchModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeSearchModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeSearchModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeSearchModel}
 */
proto.appointment.BusinessNodeSearchModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeSearchModel;
  return proto.appointment.BusinessNodeSearchModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeSearchModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeSearchModel}
 */
proto.appointment.BusinessNodeSearchModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeSearchModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeSearchModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeSearchModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeSearchModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string businessId = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchModel.prototype.getBusinessid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchModel} returns this
 */
proto.appointment.BusinessNodeSearchModel.prototype.setBusinessid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchModel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchModel} returns this
 */
proto.appointment.BusinessNodeSearchModel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isActive = 3;
 * @return {boolean}
 */
proto.appointment.BusinessNodeSearchModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeSearchModel} returns this
 */
proto.appointment.BusinessNodeSearchModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.appointment.BusinessNodeSearchResponse.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    retrievedcount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageindex: jspb.Message.getFieldWithDefault(msg, 3, 0),
    itemsperpage: jspb.Message.getFieldWithDefault(msg, 4, 0),
    order: jspb.Message.getFieldWithDefault(msg, 5, ""),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.appointment.BusinessNodeSearchResponseItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeSearchResponse}
 */
proto.appointment.BusinessNodeSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeSearchResponse;
  return proto.appointment.BusinessNodeSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeSearchResponse}
 */
proto.appointment.BusinessNodeSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetrievedcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageindex(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setItemsperpage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrder(value);
      break;
    case 6:
      var value = new proto.appointment.BusinessNodeSearchResponseItem;
      reader.readMessage(value,proto.appointment.BusinessNodeSearchResponseItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRetrievedcount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPageindex();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getItemsperpage();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOrder();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.appointment.BusinessNodeSearchResponseItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 TotalCount = 1;
 * @return {number}
 */
proto.appointment.BusinessNodeSearchResponse.prototype.getTotalcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeSearchResponse} returns this
 */
proto.appointment.BusinessNodeSearchResponse.prototype.setTotalcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 RetrievedCount = 2;
 * @return {number}
 */
proto.appointment.BusinessNodeSearchResponse.prototype.getRetrievedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeSearchResponse} returns this
 */
proto.appointment.BusinessNodeSearchResponse.prototype.setRetrievedcount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 PageIndex = 3;
 * @return {number}
 */
proto.appointment.BusinessNodeSearchResponse.prototype.getPageindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeSearchResponse} returns this
 */
proto.appointment.BusinessNodeSearchResponse.prototype.setPageindex = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 ItemsPerPage = 4;
 * @return {number}
 */
proto.appointment.BusinessNodeSearchResponse.prototype.getItemsperpage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeSearchResponse} returns this
 */
proto.appointment.BusinessNodeSearchResponse.prototype.setItemsperpage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string Order = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchResponse.prototype.getOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchResponse} returns this
 */
proto.appointment.BusinessNodeSearchResponse.prototype.setOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated BusinessNodeSearchResponseItem Items = 6;
 * @return {!Array<!proto.appointment.BusinessNodeSearchResponseItem>}
 */
proto.appointment.BusinessNodeSearchResponse.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.appointment.BusinessNodeSearchResponseItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.appointment.BusinessNodeSearchResponseItem, 6));
};


/**
 * @param {!Array<!proto.appointment.BusinessNodeSearchResponseItem>} value
 * @return {!proto.appointment.BusinessNodeSearchResponse} returns this
*/
proto.appointment.BusinessNodeSearchResponse.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.appointment.BusinessNodeSearchResponseItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.appointment.BusinessNodeSearchResponseItem}
 */
proto.appointment.BusinessNodeSearchResponse.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.appointment.BusinessNodeSearchResponseItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.appointment.BusinessNodeSearchResponse} returns this
 */
proto.appointment.BusinessNodeSearchResponse.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeSearchResponseItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeSearchResponseItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeSearchResponseItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, ""),
    displaypicture: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    longitude: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lattitude: jspb.Message.getFieldWithDefault(msg, 9, ""),
    overallrating: jspb.Message.getFieldWithDefault(msg, 10, 0),
    allowwalkinappointments: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    allowfuturebookingfor: jspb.Message.getFieldWithDefault(msg, 12, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deletedat: (f = msg.getDeletedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    isdeleted: jspb.Message.getBooleanFieldWithDefault(msg, 17, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeSearchResponseItem}
 */
proto.appointment.BusinessNodeSearchResponseItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeSearchResponseItem;
  return proto.appointment.BusinessNodeSearchResponseItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeSearchResponseItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeSearchResponseItem}
 */
proto.appointment.BusinessNodeSearchResponseItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplaypicture(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setLongitude(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLattitude(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOverallrating(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowwalkinappointments(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAllowfuturebookingfor(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 14:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 16:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedat(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdeleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeSearchResponseItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeSearchResponseItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeSearchResponseItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplaypicture();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLongitude();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLattitude();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getOverallrating();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getAllowwalkinappointments();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getAllowfuturebookingfor();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeletedat();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsdeleted();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessId = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getBusinessid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setBusinessid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Mobile = 4;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setMobile = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Email = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string DisplayPicture = 6;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getDisplaypicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setDisplaypicture = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string Address = 7;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string Longitude = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getLongitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string Lattitude = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getLattitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setLattitude = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 OverallRating = 10;
 * @return {number}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getOverallrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setOverallrating = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional bool AllowWalkinAppointments = 11;
 * @return {boolean}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getAllowwalkinappointments = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setAllowwalkinappointments = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string AllowFutureBookingFor = 12;
 * @return {string}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getAllowfuturebookingfor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setAllowfuturebookingfor = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool IsActive = 13;
 * @return {boolean}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 14;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 14));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
*/
proto.appointment.BusinessNodeSearchResponseItem.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional google.protobuf.Timestamp UpdatedAt = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
*/
proto.appointment.BusinessNodeSearchResponseItem.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional google.protobuf.Timestamp DeletedAt = 16;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getDeletedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 16));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
*/
proto.appointment.BusinessNodeSearchResponseItem.prototype.setDeletedat = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.clearDeletedat = function() {
  return this.setDeletedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.hasDeletedat = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional bool IsDeleted = 17;
 * @return {boolean}
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.getIsdeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeSearchResponseItem.prototype.setIsdeleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeDeleteModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeDeleteModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeDeleteModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeDeleteModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeDeleteModel}
 */
proto.appointment.BusinessNodeDeleteModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeDeleteModel;
  return proto.appointment.BusinessNodeDeleteModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeDeleteModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeDeleteModel}
 */
proto.appointment.BusinessNodeDeleteModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeDeleteModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeDeleteModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeDeleteModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeDeleteModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeDeleteModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeDeleteModel} returns this
 */
proto.appointment.BusinessNodeDeleteModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeDeleteResponse}
 */
proto.appointment.BusinessNodeDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeDeleteResponse;
  return proto.appointment.BusinessNodeDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeDeleteResponse}
 */
proto.appointment.BusinessNodeDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.appointment.BusinessNodeDeleteResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeDeleteResponse} returns this
 */
proto.appointment.BusinessNodeDeleteResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.appointment);
