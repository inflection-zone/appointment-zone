syntax = "proto3";

package appointment;

message BusinessNodeCustomer {
  string id = 1; 
  string BusinessNodeId = 2;
  string CustomerId = 3;
  string SmsConsent = 4;
  bool IsActive = 5;
  }

message BusinessNodeCustomerCreateModel {
    string BusinessNodeId = 1;
    string CustomerId = 2;
    string SmsConsent = 3;
    bool IsActive = 4;
}

message BusinessNodeCustomerGetByIdModel {
    string id = 1; 
}

message BusinessNodeCustomerGetByIdResponse {
    string id = 1; 
    string BusinessNodeId = 2;
    string CustomerId = 3;
    string SmsConsent = 4;
    bool IsActive = 5;
}

message BusinessNodeCustomerCreateResponse {
    string id = 1; 
    string BusinessNodeId = 2;
    string CustomerId = 3;
    string SmsConsent = 4;
    bool IsActive = 5;
}

message BusinessNodeCustomerUpdateModel {
    string id = 1; 
    string BusinessNodeId = 2;
    string CustomerId = 3;
    string SmsConsent = 4;
    bool IsActive = 5;
  }

message BusinessNodeCustomerUpdateResponse {
    string id = 1; 
    string BusinessNodeId = 2;
    string CustomerId = 3;
    string SmsConsent = 4;
    bool IsActive = 5;
  }

message BusinessNodeCustomerSearchModel {
    string businessNodeId = 1;
    string customerId = 2;
    bool isActive = 3;
}

message BusinessNodeCustomerSearchResponse {
    string id = 1; 
    string BusinessNodeId = 2;
    string CustomerId = 3;
    string SmsConsent = 4;
    bool IsActive = 5;
}

message BusinessNodeCustomerDeleteModel {
    string id = 1;
}

  message BusinessNodeCustomerDeleteResponse {
    string id = 1;
}

service BusinessNodeCustomers {
    rpc Create(BusinessNodeCustomerCreateModel) returns (BusinessNodeCustomerCreateResponse);
    rpc GetById(BusinessNodeCustomerGetByIdModel) returns (BusinessNodeCustomerGetByIdResponse) {};
    rpc Search(BusinessNodeCustomerSearchModel) returns (BusinessNodeCustomerSearchResponse) {};
    rpc Update(BusinessNodeCustomerUpdateModel) returns (BusinessNodeCustomerUpdateResponse) {};
    rpc Delete(BusinessNodeCustomerDeleteModel) returns (BusinessNodeCustomerDeleteResponse) {};

}