syntax = "proto3";

package appointment;

message UserMessage {
    string id = 1; 
    string BusinessNodeId = 2;
    string CustomerId = 3;
    string Body = 4;
    string Type = 5;
    int32 TypeId = 6;
    string MessageId = 7;
    bool IsSent = 8;
    bool IsActive = 9;
  }

message UserMessageCreateModel {
  string BusinessNodeId = 1;
  string CustomerId = 2;
  string Body = 3;
  string Type = 4;
  int32 TypeId = 5;
  string MessageId = 6;
  bool IsSent = 7;
  bool IsActive = 8;
}

message UserMessageGetByIdModel {
    string id = 1; 
}

message UserMessageGetByIdResponse {
  string id = 1; 
  string BusinessNodeId = 2;
  string CustomerId = 3;
  string Body = 4;
  string Type = 5;
  int32 TypeId = 6;
  string MessageId = 7;
  bool IsSent = 8;
  bool IsActive = 9;
}

message UserMessageCreateResponse {
  string id = 1; 
  string BusinessNodeId = 2;
  string CustomerId = 3;
  string Body = 4;
  string Type = 5;
  int32 TypeId = 6;
  string MessageId = 7;
  bool IsSent = 8;
  bool IsActive = 9;
}

message UserMessageUpdateModel {
  string id = 1; 
  string BusinessNodeId = 2;
  string CustomerId = 3;
  string Body = 4;
  string Type = 5;
  int32 TypeId = 6;
  string MessageId = 7;
  bool IsSent = 8;
  bool IsActive = 9;
}

message UserMessageUpdateResponse {
  string id = 1; 
  string BusinessNodeId = 2;
  string CustomerId = 3;
  string Body = 4;
  string Type = 5;
  int32 TypeId = 6;
  string MessageId = 7;
  bool IsSent = 8;
  bool IsActive = 9;
}

message UserMessageSearchModel {
    string businessNodeId = 1;
    string customerId = 2;
    bool isActive = 3;
}

message UserMessageSearchResponse {
  string id = 1; 
  string BusinessNodeId = 2;
  string CustomerId = 3;
  string Body = 4;
  string Type = 5;
  int32 TypeId = 6;
  string MessageId = 7;
  bool IsSent = 8;
  bool IsActive = 9;
}

message UserMessageDeleteModel {
    string id = 1;
}

  message UserMessageDeleteResponse {
    string id = 1;
}

service UserMessages {
    rpc Create(UserMessageCreateModel) returns (UserMessageCreateResponse);
    rpc GetById(UserMessageGetByIdModel) returns (UserMessageGetByIdResponse) {};
    rpc Search(UserMessageSearchModel) returns (UserMessageSearchResponse) {};
    rpc Update(UserMessageUpdateModel) returns (UserMessageUpdateResponse) {};
    rpc Delete(UserMessageDeleteModel) returns (UserMessageDeleteResponse) {};

}