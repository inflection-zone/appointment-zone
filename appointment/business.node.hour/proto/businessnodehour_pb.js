// source: businessnodehour.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.appointment.BusinessNodeHour', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourCreateModel', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourCreateMultipleModel', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourCreateMultipleResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourCreateMultipleResponseItem', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourCreateResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourDeleteModel', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourDeleteResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourGetByIdModel', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourGetByIdResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourSearchModel', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourSearchResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourSearchResponseItem', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourUpdateModel', null, global);
goog.exportSymbol('proto.appointment.BusinessNodeHourUpdateResponse', null, global);
goog.exportSymbol('proto.appointment.DayWiseWorkingHour', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHour = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHour, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHour.displayName = 'proto.appointment.BusinessNodeHour';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourCreateModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHourCreateModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourCreateModel.displayName = 'proto.appointment.BusinessNodeHourCreateModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.DayWiseWorkingHour = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.DayWiseWorkingHour, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.DayWiseWorkingHour.displayName = 'proto.appointment.DayWiseWorkingHour';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourCreateMultipleModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.appointment.BusinessNodeHourCreateMultipleModel.repeatedFields_, null);
};
goog.inherits(proto.appointment.BusinessNodeHourCreateMultipleModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourCreateMultipleModel.displayName = 'proto.appointment.BusinessNodeHourCreateMultipleModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourCreateMultipleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.appointment.BusinessNodeHourCreateMultipleResponse.repeatedFields_, null);
};
goog.inherits(proto.appointment.BusinessNodeHourCreateMultipleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourCreateMultipleResponse.displayName = 'proto.appointment.BusinessNodeHourCreateMultipleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHourCreateMultipleResponseItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourCreateMultipleResponseItem.displayName = 'proto.appointment.BusinessNodeHourCreateMultipleResponseItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourGetByIdModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHourGetByIdModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourGetByIdModel.displayName = 'proto.appointment.BusinessNodeHourGetByIdModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourGetByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHourGetByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourGetByIdResponse.displayName = 'proto.appointment.BusinessNodeHourGetByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHourCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourCreateResponse.displayName = 'proto.appointment.BusinessNodeHourCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourUpdateModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHourUpdateModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourUpdateModel.displayName = 'proto.appointment.BusinessNodeHourUpdateModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHourUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourUpdateResponse.displayName = 'proto.appointment.BusinessNodeHourUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourSearchModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHourSearchModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourSearchModel.displayName = 'proto.appointment.BusinessNodeHourSearchModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.appointment.BusinessNodeHourSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.appointment.BusinessNodeHourSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourSearchResponse.displayName = 'proto.appointment.BusinessNodeHourSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourSearchResponseItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHourSearchResponseItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourSearchResponseItem.displayName = 'proto.appointment.BusinessNodeHourSearchResponseItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourDeleteModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHourDeleteModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourDeleteModel.displayName = 'proto.appointment.BusinessNodeHourDeleteModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessNodeHourDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessNodeHourDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessNodeHourDeleteResponse.displayName = 'proto.appointment.BusinessNodeHourDeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHour.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHour.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHour} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHour.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    day: jspb.Message.getFieldWithDefault(msg, 4, 0),
    date: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isopen: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    message: jspb.Message.getFieldWithDefault(msg, 8, ""),
    starttime: jspb.Message.getFieldWithDefault(msg, 9, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHour}
 */
proto.appointment.BusinessNodeHour.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHour;
  return proto.appointment.BusinessNodeHour.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHour} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHour}
 */
proto.appointment.BusinessNodeHour.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsopen(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHour.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHour.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHour} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHour.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsopen();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeHour.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHour} returns this
 */
proto.appointment.BusinessNodeHour.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeHour.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHour} returns this
 */
proto.appointment.BusinessNodeHour.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Type = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeHour.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHour} returns this
 */
proto.appointment.BusinessNodeHour.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 Day = 4;
 * @return {number}
 */
proto.appointment.BusinessNodeHour.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHour} returns this
 */
proto.appointment.BusinessNodeHour.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string Date = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeHour.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHour} returns this
 */
proto.appointment.BusinessNodeHour.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool IsOpen = 6;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHour.prototype.getIsopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHour} returns this
 */
proto.appointment.BusinessNodeHour.prototype.setIsopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool IsActive = 7;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHour.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHour} returns this
 */
proto.appointment.BusinessNodeHour.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string Message = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeHour.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHour} returns this
 */
proto.appointment.BusinessNodeHour.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string StartTime = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeHour.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHour} returns this
 */
proto.appointment.BusinessNodeHour.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string EndTime = 10;
 * @return {string}
 */
proto.appointment.BusinessNodeHour.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHour} returns this
 */
proto.appointment.BusinessNodeHour.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourCreateModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourCreateModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourCreateModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    day: jspb.Message.getFieldWithDefault(msg, 3, 0),
    date: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isopen: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    message: jspb.Message.getFieldWithDefault(msg, 7, ""),
    starttime: jspb.Message.getFieldWithDefault(msg, 8, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourCreateModel}
 */
proto.appointment.BusinessNodeHourCreateModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourCreateModel;
  return proto.appointment.BusinessNodeHourCreateModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourCreateModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourCreateModel}
 */
proto.appointment.BusinessNodeHourCreateModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsopen(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourCreateModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourCreateModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourCreateModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsopen();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string BusinessNodeId = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateModel} returns this
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Type = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateModel} returns this
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 Day = 3;
 * @return {number}
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourCreateModel} returns this
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string Date = 4;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateModel} returns this
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool IsOpen = 5;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.getIsopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourCreateModel} returns this
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.setIsopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool IsActive = 6;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourCreateModel} returns this
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string Message = 7;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateModel} returns this
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string StartTime = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateModel} returns this
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string EndTime = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateModel} returns this
 */
proto.appointment.BusinessNodeHourCreateModel.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.DayWiseWorkingHour.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.DayWiseWorkingHour.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.DayWiseWorkingHour} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.DayWiseWorkingHour.toObject = function(includeInstance, msg) {
  var f, obj = {
    day: jspb.Message.getFieldWithDefault(msg, 1, 0),
    starttime: jspb.Message.getFieldWithDefault(msg, 2, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.DayWiseWorkingHour}
 */
proto.appointment.DayWiseWorkingHour.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.DayWiseWorkingHour;
  return proto.appointment.DayWiseWorkingHour.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.DayWiseWorkingHour} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.DayWiseWorkingHour}
 */
proto.appointment.DayWiseWorkingHour.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.DayWiseWorkingHour.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.DayWiseWorkingHour.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.DayWiseWorkingHour} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.DayWiseWorkingHour.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 Day = 1;
 * @return {number}
 */
proto.appointment.DayWiseWorkingHour.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.DayWiseWorkingHour} returns this
 */
proto.appointment.DayWiseWorkingHour.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string StartTime = 2;
 * @return {string}
 */
proto.appointment.DayWiseWorkingHour.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.DayWiseWorkingHour} returns this
 */
proto.appointment.DayWiseWorkingHour.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string EndTime = 3;
 * @return {string}
 */
proto.appointment.DayWiseWorkingHour.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.DayWiseWorkingHour} returns this
 */
proto.appointment.DayWiseWorkingHour.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourCreateMultipleModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourCreateMultipleModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    daywiseworkinghoursList: jspb.Message.toObjectList(msg.getDaywiseworkinghoursList(),
    proto.appointment.DayWiseWorkingHour.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleModel}
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourCreateMultipleModel;
  return proto.appointment.BusinessNodeHourCreateMultipleModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourCreateMultipleModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleModel}
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 2:
      var value = new proto.appointment.DayWiseWorkingHour;
      reader.readMessage(value,proto.appointment.DayWiseWorkingHour.deserializeBinaryFromReader);
      msg.addDaywiseworkinghours(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourCreateMultipleModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourCreateMultipleModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDaywiseworkinghoursList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.appointment.DayWiseWorkingHour.serializeBinaryToWriter
    );
  }
};


/**
 * optional string BusinessNodeId = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleModel} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated DayWiseWorkingHour DayWiseWorkingHours = 2;
 * @return {!Array<!proto.appointment.DayWiseWorkingHour>}
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.prototype.getDaywiseworkinghoursList = function() {
  return /** @type{!Array<!proto.appointment.DayWiseWorkingHour>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.appointment.DayWiseWorkingHour, 2));
};


/**
 * @param {!Array<!proto.appointment.DayWiseWorkingHour>} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleModel} returns this
*/
proto.appointment.BusinessNodeHourCreateMultipleModel.prototype.setDaywiseworkinghoursList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.appointment.DayWiseWorkingHour=} opt_value
 * @param {number=} opt_index
 * @return {!proto.appointment.DayWiseWorkingHour}
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.prototype.addDaywiseworkinghours = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.appointment.DayWiseWorkingHour, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleModel} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleModel.prototype.clearDaywiseworkinghoursList = function() {
  return this.setDaywiseworkinghoursList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.appointment.BusinessNodeHourCreateMultipleResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourCreateMultipleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourCreateMultipleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourCreateMultipleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.appointment.BusinessNodeHourCreateMultipleResponseItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponse}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourCreateMultipleResponse;
  return proto.appointment.BusinessNodeHourCreateMultipleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourCreateMultipleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponse}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.appointment.BusinessNodeHourCreateMultipleResponseItem;
      reader.readMessage(value,proto.appointment.BusinessNodeHourCreateMultipleResponseItem.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourCreateMultipleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourCreateMultipleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourCreateMultipleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.appointment.BusinessNodeHourCreateMultipleResponseItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BusinessNodeHourCreateMultipleResponseItem data = 1;
 * @return {!Array<!proto.appointment.BusinessNodeHourCreateMultipleResponseItem>}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.appointment.BusinessNodeHourCreateMultipleResponseItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.appointment.BusinessNodeHourCreateMultipleResponseItem, 1));
};


/**
 * @param {!Array<!proto.appointment.BusinessNodeHourCreateMultipleResponseItem>} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponse} returns this
*/
proto.appointment.BusinessNodeHourCreateMultipleResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.appointment.BusinessNodeHourCreateMultipleResponseItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponse} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourCreateMultipleResponseItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    day: jspb.Message.getFieldWithDefault(msg, 1, 0),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    date: jspb.Message.getFieldWithDefault(msg, 3, ""),
    isopen: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    message: jspb.Message.getFieldWithDefault(msg, 6, ""),
    starttime: jspb.Message.getFieldWithDefault(msg, 7, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 8, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 9, ""),
    id: jspb.Message.getFieldWithDefault(msg, 10, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deletedat: (f = msg.getDeletedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    isdeleted: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourCreateMultipleResponseItem;
  return proto.appointment.BusinessNodeHourCreateMultipleResponseItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsopen(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedat(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdeleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourCreateMultipleResponseItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIsopen();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeletedat();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsdeleted();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional int32 Day = 1;
 * @return {number}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Type = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Date = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool IsOpen = 4;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getIsopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setIsopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool IsActive = 5;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string Message = 6;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string StartTime = 7;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string EndTime = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string BusinessNodeId = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string id = 10;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
*/
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Timestamp UpdatedAt = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
*/
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp DeletedAt = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getDeletedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
*/
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setDeletedat = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.clearDeletedat = function() {
  return this.setDeletedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.hasDeletedat = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool IsDeleted = 14;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.getIsdeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourCreateMultipleResponseItem} returns this
 */
proto.appointment.BusinessNodeHourCreateMultipleResponseItem.prototype.setIsdeleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourGetByIdModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourGetByIdModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourGetByIdModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourGetByIdModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourGetByIdModel}
 */
proto.appointment.BusinessNodeHourGetByIdModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourGetByIdModel;
  return proto.appointment.BusinessNodeHourGetByIdModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourGetByIdModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourGetByIdModel}
 */
proto.appointment.BusinessNodeHourGetByIdModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourGetByIdModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourGetByIdModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourGetByIdModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourGetByIdModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeHourGetByIdModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourGetByIdModel} returns this
 */
proto.appointment.BusinessNodeHourGetByIdModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourGetByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourGetByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourGetByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    day: jspb.Message.getFieldWithDefault(msg, 4, 0),
    date: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isopen: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    message: jspb.Message.getFieldWithDefault(msg, 8, ""),
    starttime: jspb.Message.getFieldWithDefault(msg, 9, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourGetByIdResponse;
  return proto.appointment.BusinessNodeHourGetByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourGetByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsopen(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourGetByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourGetByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourGetByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsopen();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Type = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 Day = 4;
 * @return {number}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string Date = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool IsOpen = 6;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.getIsopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.setIsopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool IsActive = 7;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string Message = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string StartTime = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string EndTime = 10;
 * @return {string}
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourGetByIdResponse} returns this
 */
proto.appointment.BusinessNodeHourGetByIdResponse.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    day: jspb.Message.getFieldWithDefault(msg, 4, 0),
    date: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isopen: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    message: jspb.Message.getFieldWithDefault(msg, 8, ""),
    starttime: jspb.Message.getFieldWithDefault(msg, 9, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourCreateResponse}
 */
proto.appointment.BusinessNodeHourCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourCreateResponse;
  return proto.appointment.BusinessNodeHourCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourCreateResponse}
 */
proto.appointment.BusinessNodeHourCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsopen(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsopen();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateResponse} returns this
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateResponse} returns this
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Type = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateResponse} returns this
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 Day = 4;
 * @return {number}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourCreateResponse} returns this
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string Date = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateResponse} returns this
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool IsOpen = 6;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.getIsopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourCreateResponse} returns this
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.setIsopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool IsActive = 7;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourCreateResponse} returns this
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string Message = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateResponse} returns this
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string StartTime = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateResponse} returns this
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string EndTime = 10;
 * @return {string}
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourCreateResponse} returns this
 */
proto.appointment.BusinessNodeHourCreateResponse.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourUpdateModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourUpdateModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourUpdateModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    day: jspb.Message.getFieldWithDefault(msg, 4, 0),
    date: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isopen: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    message: jspb.Message.getFieldWithDefault(msg, 8, ""),
    starttime: jspb.Message.getFieldWithDefault(msg, 9, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourUpdateModel}
 */
proto.appointment.BusinessNodeHourUpdateModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourUpdateModel;
  return proto.appointment.BusinessNodeHourUpdateModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourUpdateModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourUpdateModel}
 */
proto.appointment.BusinessNodeHourUpdateModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsopen(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourUpdateModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourUpdateModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourUpdateModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsopen();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateModel} returns this
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateModel} returns this
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Type = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateModel} returns this
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 Day = 4;
 * @return {number}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourUpdateModel} returns this
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string Date = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateModel} returns this
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool IsOpen = 6;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.getIsopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourUpdateModel} returns this
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.setIsopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool IsActive = 7;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourUpdateModel} returns this
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string Message = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateModel} returns this
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string StartTime = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateModel} returns this
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string EndTime = 10;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateModel} returns this
 */
proto.appointment.BusinessNodeHourUpdateModel.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    day: jspb.Message.getFieldWithDefault(msg, 4, 0),
    date: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isopen: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    message: jspb.Message.getFieldWithDefault(msg, 8, ""),
    starttime: jspb.Message.getFieldWithDefault(msg, 9, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse}
 */
proto.appointment.BusinessNodeHourUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourUpdateResponse;
  return proto.appointment.BusinessNodeHourUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse}
 */
proto.appointment.BusinessNodeHourUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsopen(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsopen();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse} returns this
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse} returns this
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Type = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse} returns this
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 Day = 4;
 * @return {number}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse} returns this
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string Date = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse} returns this
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool IsOpen = 6;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.getIsopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse} returns this
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.setIsopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool IsActive = 7;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse} returns this
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string Message = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse} returns this
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string StartTime = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse} returns this
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string EndTime = 10;
 * @return {string}
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourUpdateResponse} returns this
 */
proto.appointment.BusinessNodeHourUpdateResponse.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourSearchModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourSearchModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourSearchModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourSearchModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourSearchModel}
 */
proto.appointment.BusinessNodeHourSearchModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourSearchModel;
  return proto.appointment.BusinessNodeHourSearchModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourSearchModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourSearchModel}
 */
proto.appointment.BusinessNodeHourSearchModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourSearchModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourSearchModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourSearchModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourSearchModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string businessNodeId = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeHourSearchModel.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourSearchModel} returns this
 */
proto.appointment.BusinessNodeHourSearchModel.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool isActive = 2;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourSearchModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourSearchModel} returns this
 */
proto.appointment.BusinessNodeHourSearchModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.appointment.BusinessNodeHourSearchResponse.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalcount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    retrievedcount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageindex: jspb.Message.getFieldWithDefault(msg, 3, 0),
    itemsperpage: jspb.Message.getFieldWithDefault(msg, 4, 0),
    order: jspb.Message.getFieldWithDefault(msg, 5, ""),
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.appointment.BusinessNodeHourSearchResponseItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourSearchResponse}
 */
proto.appointment.BusinessNodeHourSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourSearchResponse;
  return proto.appointment.BusinessNodeHourSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourSearchResponse}
 */
proto.appointment.BusinessNodeHourSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalcount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetrievedcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageindex(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setItemsperpage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrder(value);
      break;
    case 6:
      var value = new proto.appointment.BusinessNodeHourSearchResponseItem;
      reader.readMessage(value,proto.appointment.BusinessNodeHourSearchResponseItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalcount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRetrievedcount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPageindex();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getItemsperpage();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getOrder();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.appointment.BusinessNodeHourSearchResponseItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 TotalCount = 1;
 * @return {number}
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.getTotalcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponse} returns this
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.setTotalcount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 RetrievedCount = 2;
 * @return {number}
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.getRetrievedcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponse} returns this
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.setRetrievedcount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 PageIndex = 3;
 * @return {number}
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.getPageindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponse} returns this
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.setPageindex = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 ItemsPerPage = 4;
 * @return {number}
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.getItemsperpage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponse} returns this
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.setItemsperpage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string Order = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.getOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponse} returns this
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.setOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated BusinessNodeHourSearchResponseItem Items = 6;
 * @return {!Array<!proto.appointment.BusinessNodeHourSearchResponseItem>}
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.appointment.BusinessNodeHourSearchResponseItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.appointment.BusinessNodeHourSearchResponseItem, 6));
};


/**
 * @param {!Array<!proto.appointment.BusinessNodeHourSearchResponseItem>} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponse} returns this
*/
proto.appointment.BusinessNodeHourSearchResponse.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.appointment.BusinessNodeHourSearchResponseItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem}
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.appointment.BusinessNodeHourSearchResponseItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.appointment.BusinessNodeHourSearchResponse} returns this
 */
proto.appointment.BusinessNodeHourSearchResponse.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourSearchResponseItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourSearchResponseItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourSearchResponseItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    day: jspb.Message.getFieldWithDefault(msg, 4, 0),
    date: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isopen: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    message: jspb.Message.getFieldWithDefault(msg, 8, ""),
    starttime: jspb.Message.getFieldWithDefault(msg, 9, ""),
    endtime: jspb.Message.getFieldWithDefault(msg, 10, ""),
    createdat: (f = msg.getCreatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedat: (f = msg.getUpdatedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deletedat: (f = msg.getDeletedat()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    isdeleted: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourSearchResponseItem;
  return proto.appointment.BusinessNodeHourSearchResponseItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourSearchResponseItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDay(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDate(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsopen(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStarttime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndtime(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedat(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedat(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedat(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsdeleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourSearchResponseItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourSearchResponseItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourSearchResponseItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDay();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsopen();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStarttime();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEndtime();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getCreatedat();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeletedat();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsdeleted();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Type = 3;
 * @return {string}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 Day = 4;
 * @return {number}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getDay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setDay = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string Date = 5;
 * @return {string}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool IsOpen = 6;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getIsopen = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setIsopen = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool IsActive = 7;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional string Message = 8;
 * @return {string}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string StartTime = 9;
 * @return {string}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getStarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setStarttime = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string EndTime = 10;
 * @return {string}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getEndtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setEndtime = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp CreatedAt = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getCreatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
*/
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setCreatedat = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.clearCreatedat = function() {
  return this.setCreatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.hasCreatedat = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional google.protobuf.Timestamp UpdatedAt = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getUpdatedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
*/
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setUpdatedat = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.clearUpdatedat = function() {
  return this.setUpdatedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.hasUpdatedat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional google.protobuf.Timestamp DeletedAt = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getDeletedat = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
*/
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setDeletedat = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.clearDeletedat = function() {
  return this.setDeletedat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.hasDeletedat = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional bool IsDeleted = 14;
 * @return {boolean}
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.getIsdeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessNodeHourSearchResponseItem} returns this
 */
proto.appointment.BusinessNodeHourSearchResponseItem.prototype.setIsdeleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourDeleteModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourDeleteModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourDeleteModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourDeleteModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourDeleteModel}
 */
proto.appointment.BusinessNodeHourDeleteModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourDeleteModel;
  return proto.appointment.BusinessNodeHourDeleteModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourDeleteModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourDeleteModel}
 */
proto.appointment.BusinessNodeHourDeleteModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourDeleteModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourDeleteModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourDeleteModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourDeleteModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessNodeHourDeleteModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessNodeHourDeleteModel} returns this
 */
proto.appointment.BusinessNodeHourDeleteModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessNodeHourDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessNodeHourDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessNodeHourDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessNodeHourDeleteResponse}
 */
proto.appointment.BusinessNodeHourDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessNodeHourDeleteResponse;
  return proto.appointment.BusinessNodeHourDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessNodeHourDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessNodeHourDeleteResponse}
 */
proto.appointment.BusinessNodeHourDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessNodeHourDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessNodeHourDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessNodeHourDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessNodeHourDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.appointment.BusinessNodeHourDeleteResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessNodeHourDeleteResponse} returns this
 */
proto.appointment.BusinessNodeHourDeleteResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.appointment);
