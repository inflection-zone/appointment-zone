syntax = "proto3";

package appointment;

message BusinessServiceService {
  string id = 1; 
  string BusinessNodeId = 2;
  string Name = 3;
  string Description = 4;
  string ServiceDuration = 5;
  float Fees = 6;
  bool IsTaxable = 7;
  float TaxRate = 8;
  bool PaymentRequired = 9;
  int32 PaymentPercent = 10;
  string PriorBookingWindow = 11;
  bool SendReminder = 12;
  string ReminderWindow = 13;
  string ReminderType = 14;
  bool AllowCancellation = 15;
  string CancellationWindow = 16;
  float CancellationCharges = 17;
  bool EnableLoyalty = 18;
  bool IsActive = 19;
  }

message BusinessServiceCreateModel {
  string BusinessNodeId = 1;
  string Name = 2;
  string Description = 3;
  string ServiceDuration = 4;
  float Fees = 5;
  bool IsTaxable = 6;
  float TaxRate = 7;
  bool PaymentRequired = 8;
  int32 PaymentPercent = 9;
  string PriorBookingWindow = 10;
  bool SendReminder = 11;
  string ReminderWindow = 12;
  string ReminderType = 13;
  bool AllowCancellation = 14;
  string CancellationWindow = 15;
  float CancellationCharges = 16;
  bool EnableLoyalty = 17;
  bool IsActive = 18;
}

message BusinessServiceGetByIdModel {
    string id = 1; 
}

message BusinessServiceGetByIdResponse {
    string id = 1; 
    string BusinessNodeId = 2;
    string Name = 3;
    string Description = 4;
    string ServiceDuration = 5;
    float Fees = 6;
    bool IsTaxable = 7;
    float TaxRate = 8;
    bool PaymentRequired = 9;
    int32 PaymentPercent = 10;
    string PriorBookingWindow = 11;
    bool SendReminder = 12;
    string ReminderWindow = 13;
    string ReminderType = 14;
    bool AllowCancellation = 15;
    string CancellationWindow = 16;
    float CancellationCharges = 17;
    bool EnableLoyalty = 18;
    bool IsActive = 19;
}

message BusinessServiceCreateResponse {
  string id = 1; 
  string BusinessNodeId = 2;
  string Name = 3;
  string Description = 4;
  string ServiceDuration = 5;
  float Fees = 6;
  bool IsTaxable = 7;
  float TaxRate = 8;
  bool PaymentRequired = 9;
  int32 PaymentPercent = 10;
  string PriorBookingWindow = 11;
  bool SendReminder = 12;
  string ReminderWindow = 13;
  string ReminderType = 14;
  bool AllowCancellation = 15;
  string CancellationWindow = 16;
  float CancellationCharges = 17;
  bool EnableLoyalty = 18;
  bool IsActive = 19;
}

message BusinessServiceUpdateModel {
  string id = 1; 
  string BusinessNodeId = 2;
  string Name = 3;
  string Description = 4;
  string ServiceDuration = 5;
  float Fees = 6;
  bool IsTaxable = 7;
  float TaxRate = 8;
  bool PaymentRequired = 9;
  int32 PaymentPercent = 10;
  string PriorBookingWindow = 11;
  bool SendReminder = 12;
  string ReminderWindow = 13;
  string ReminderType = 14;
  bool AllowCancellation = 15;
  string CancellationWindow = 16;
  float CancellationCharges = 17;
  bool EnableLoyalty = 18;
  bool IsActive = 19;
}

message BusinessServiceUpdateResponse {
  string id = 1; 
  string BusinessNodeId = 2;
  string Name = 3;
  string Description = 4;
  string ServiceDuration = 5;
  float Fees = 6;
  bool IsTaxable = 7;
  float TaxRate = 8;
  bool PaymentRequired = 9;
  int32 PaymentPercent = 10;
  string PriorBookingWindow = 11;
  bool SendReminder = 12;
  string ReminderWindow = 13;
  string ReminderType = 14;
  bool AllowCancellation = 15;
  string CancellationWindow = 16;
  float CancellationCharges = 17;
  bool EnableLoyalty = 18;
  bool IsActive = 19;
}

message BusinessServiceSearchModel {
  string businessNodeId = 1;
  string name = 2;
  bool isActive = 3;
}

message BusinessServiceSearchResponse {
  string id = 1; 
  string BusinessNodeId = 2;
  string Name = 3;
  string Description = 4;
  string ServiceDuration = 5;
  float Fees = 6;
  bool IsTaxable = 7;
  float TaxRate = 8;
  bool PaymentRequired = 9;
  int32 PaymentPercent = 10;
  string PriorBookingWindow = 11;
  bool SendReminder = 12;
  string ReminderWindow = 13;
  string ReminderType = 14;
  bool AllowCancellation = 15;
  string CancellationWindow = 16;
  float CancellationCharges = 17;
  bool EnableLoyalty = 18;
  bool IsActive = 19;
}

message BusinessServiceDeleteModel {
    string id = 1;
}

  message BusinessServiceDeleteResponse {
    int32 count = 1;
}

service BusinessServices {
    rpc Create(BusinessServiceCreateModel) returns (BusinessServiceCreateResponse);
    rpc GetById(BusinessServiceGetByIdModel) returns (BusinessServiceGetByIdResponse) {};
    rpc Search(BusinessServiceSearchModel) returns (BusinessServiceSearchResponse) {};
    rpc Update(BusinessServiceUpdateModel) returns (BusinessServiceUpdateResponse) {};
    rpc Delete(BusinessServiceDeleteModel) returns (BusinessServiceDeleteResponse) {};
}