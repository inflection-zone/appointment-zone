// source: businessservice.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.appointment.BusinessServiceCreateModel', null, global);
goog.exportSymbol('proto.appointment.BusinessServiceCreateResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessServiceDeleteModel', null, global);
goog.exportSymbol('proto.appointment.BusinessServiceDeleteResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessServiceGetByIdModel', null, global);
goog.exportSymbol('proto.appointment.BusinessServiceGetByIdResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessServiceSearchModel', null, global);
goog.exportSymbol('proto.appointment.BusinessServiceSearchResponse', null, global);
goog.exportSymbol('proto.appointment.BusinessServiceService', null, global);
goog.exportSymbol('proto.appointment.BusinessServiceUpdateModel', null, global);
goog.exportSymbol('proto.appointment.BusinessServiceUpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessServiceService = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessServiceService, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessServiceService.displayName = 'proto.appointment.BusinessServiceService';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessServiceCreateModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessServiceCreateModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessServiceCreateModel.displayName = 'proto.appointment.BusinessServiceCreateModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessServiceGetByIdModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessServiceGetByIdModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessServiceGetByIdModel.displayName = 'proto.appointment.BusinessServiceGetByIdModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessServiceGetByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessServiceGetByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessServiceGetByIdResponse.displayName = 'proto.appointment.BusinessServiceGetByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessServiceCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessServiceCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessServiceCreateResponse.displayName = 'proto.appointment.BusinessServiceCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessServiceUpdateModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessServiceUpdateModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessServiceUpdateModel.displayName = 'proto.appointment.BusinessServiceUpdateModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessServiceUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessServiceUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessServiceUpdateResponse.displayName = 'proto.appointment.BusinessServiceUpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessServiceSearchModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessServiceSearchModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessServiceSearchModel.displayName = 'proto.appointment.BusinessServiceSearchModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessServiceSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessServiceSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessServiceSearchResponse.displayName = 'proto.appointment.BusinessServiceSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessServiceDeleteModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessServiceDeleteModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessServiceDeleteModel.displayName = 'proto.appointment.BusinessServiceDeleteModel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.appointment.BusinessServiceDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.appointment.BusinessServiceDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.appointment.BusinessServiceDeleteResponse.displayName = 'proto.appointment.BusinessServiceDeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessServiceService.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessServiceService.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessServiceService} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceService.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    serviceduration: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fees: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    istaxable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    taxrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    paymentrequired: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    paymentpercent: jspb.Message.getFieldWithDefault(msg, 10, 0),
    priorbookingwindow: jspb.Message.getFieldWithDefault(msg, 11, ""),
    sendreminder: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    reminderwindow: jspb.Message.getFieldWithDefault(msg, 13, ""),
    remindertype: jspb.Message.getFieldWithDefault(msg, 14, ""),
    allowcancellation: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    cancellationwindow: jspb.Message.getFieldWithDefault(msg, 16, ""),
    cancellationcharges: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    enableloyalty: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 19, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessServiceService}
 */
proto.appointment.BusinessServiceService.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessServiceService;
  return proto.appointment.BusinessServiceService.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessServiceService} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessServiceService}
 */
proto.appointment.BusinessServiceService.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceduration(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFees(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstaxable(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTaxrate(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaymentrequired(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentpercent(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriorbookingwindow(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendreminder(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setReminderwindow(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemindertype(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowcancellation(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancellationwindow(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCancellationcharges(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableloyalty(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessServiceService.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessServiceService.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessServiceService} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceService.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getServiceduration();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFees();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getIstaxable();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTaxrate();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getPaymentrequired();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPaymentpercent();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPriorbookingwindow();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSendreminder();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getReminderwindow();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRemindertype();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAllowcancellation();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getCancellationwindow();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCancellationcharges();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getEnableloyalty();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessServiceService.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessServiceService.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessServiceService.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Description = 4;
 * @return {string}
 */
proto.appointment.BusinessServiceService.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ServiceDuration = 5;
 * @return {string}
 */
proto.appointment.BusinessServiceService.prototype.getServiceduration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setServiceduration = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional float Fees = 6;
 * @return {number}
 */
proto.appointment.BusinessServiceService.prototype.getFees = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setFees = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional bool IsTaxable = 7;
 * @return {boolean}
 */
proto.appointment.BusinessServiceService.prototype.getIstaxable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setIstaxable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional float TaxRate = 8;
 * @return {number}
 */
proto.appointment.BusinessServiceService.prototype.getTaxrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setTaxrate = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional bool PaymentRequired = 9;
 * @return {boolean}
 */
proto.appointment.BusinessServiceService.prototype.getPaymentrequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setPaymentrequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 PaymentPercent = 10;
 * @return {number}
 */
proto.appointment.BusinessServiceService.prototype.getPaymentpercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setPaymentpercent = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string PriorBookingWindow = 11;
 * @return {string}
 */
proto.appointment.BusinessServiceService.prototype.getPriorbookingwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setPriorbookingwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool SendReminder = 12;
 * @return {boolean}
 */
proto.appointment.BusinessServiceService.prototype.getSendreminder = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setSendreminder = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string ReminderWindow = 13;
 * @return {string}
 */
proto.appointment.BusinessServiceService.prototype.getReminderwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setReminderwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string ReminderType = 14;
 * @return {string}
 */
proto.appointment.BusinessServiceService.prototype.getRemindertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setRemindertype = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool AllowCancellation = 15;
 * @return {boolean}
 */
proto.appointment.BusinessServiceService.prototype.getAllowcancellation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setAllowcancellation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string CancellationWindow = 16;
 * @return {string}
 */
proto.appointment.BusinessServiceService.prototype.getCancellationwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setCancellationwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional float CancellationCharges = 17;
 * @return {number}
 */
proto.appointment.BusinessServiceService.prototype.getCancellationcharges = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setCancellationcharges = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional bool EnableLoyalty = 18;
 * @return {boolean}
 */
proto.appointment.BusinessServiceService.prototype.getEnableloyalty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setEnableloyalty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool IsActive = 19;
 * @return {boolean}
 */
proto.appointment.BusinessServiceService.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceService} returns this
 */
proto.appointment.BusinessServiceService.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessServiceCreateModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessServiceCreateModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessServiceCreateModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceCreateModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    serviceduration: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fees: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    istaxable: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    taxrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    paymentrequired: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    paymentpercent: jspb.Message.getFieldWithDefault(msg, 9, 0),
    priorbookingwindow: jspb.Message.getFieldWithDefault(msg, 10, ""),
    sendreminder: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    reminderwindow: jspb.Message.getFieldWithDefault(msg, 12, ""),
    remindertype: jspb.Message.getFieldWithDefault(msg, 13, ""),
    allowcancellation: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    cancellationwindow: jspb.Message.getFieldWithDefault(msg, 15, ""),
    cancellationcharges: jspb.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0),
    enableloyalty: jspb.Message.getBooleanFieldWithDefault(msg, 17, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 18, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessServiceCreateModel}
 */
proto.appointment.BusinessServiceCreateModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessServiceCreateModel;
  return proto.appointment.BusinessServiceCreateModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessServiceCreateModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessServiceCreateModel}
 */
proto.appointment.BusinessServiceCreateModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceduration(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFees(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstaxable(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTaxrate(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaymentrequired(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentpercent(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriorbookingwindow(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendreminder(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setReminderwindow(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemindertype(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowcancellation(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancellationwindow(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCancellationcharges(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableloyalty(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessServiceCreateModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessServiceCreateModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessServiceCreateModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceCreateModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getServiceduration();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFees();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getIstaxable();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getTaxrate();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getPaymentrequired();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getPaymentpercent();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getPriorbookingwindow();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getSendreminder();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getReminderwindow();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getRemindertype();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getAllowcancellation();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getCancellationwindow();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCancellationcharges();
  if (f !== 0.0) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = message.getEnableloyalty();
  if (f) {
    writer.writeBool(
      17,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
};


/**
 * optional string BusinessNodeId = 1;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Description = 3;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ServiceDuration = 4;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getServiceduration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setServiceduration = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional float Fees = 5;
 * @return {number}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getFees = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setFees = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional bool IsTaxable = 6;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getIstaxable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setIstaxable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional float TaxRate = 7;
 * @return {number}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getTaxrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setTaxrate = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional bool PaymentRequired = 8;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getPaymentrequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setPaymentrequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int32 PaymentPercent = 9;
 * @return {number}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getPaymentpercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setPaymentpercent = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string PriorBookingWindow = 10;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getPriorbookingwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setPriorbookingwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool SendReminder = 11;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getSendreminder = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setSendreminder = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional string ReminderWindow = 12;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getReminderwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setReminderwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string ReminderType = 13;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getRemindertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setRemindertype = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bool AllowCancellation = 14;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getAllowcancellation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setAllowcancellation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional string CancellationWindow = 15;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getCancellationwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setCancellationwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional float CancellationCharges = 16;
 * @return {number}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getCancellationcharges = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setCancellationcharges = function(value) {
  return jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional bool EnableLoyalty = 17;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getEnableloyalty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setEnableloyalty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 17, value);
};


/**
 * optional bool IsActive = 18;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateModel} returns this
 */
proto.appointment.BusinessServiceCreateModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessServiceGetByIdModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessServiceGetByIdModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessServiceGetByIdModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceGetByIdModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessServiceGetByIdModel}
 */
proto.appointment.BusinessServiceGetByIdModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessServiceGetByIdModel;
  return proto.appointment.BusinessServiceGetByIdModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessServiceGetByIdModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessServiceGetByIdModel}
 */
proto.appointment.BusinessServiceGetByIdModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessServiceGetByIdModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessServiceGetByIdModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessServiceGetByIdModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceGetByIdModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessServiceGetByIdModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceGetByIdModel} returns this
 */
proto.appointment.BusinessServiceGetByIdModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessServiceGetByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessServiceGetByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceGetByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    serviceduration: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fees: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    istaxable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    taxrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    paymentrequired: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    paymentpercent: jspb.Message.getFieldWithDefault(msg, 10, 0),
    priorbookingwindow: jspb.Message.getFieldWithDefault(msg, 11, ""),
    sendreminder: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    reminderwindow: jspb.Message.getFieldWithDefault(msg, 13, ""),
    remindertype: jspb.Message.getFieldWithDefault(msg, 14, ""),
    allowcancellation: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    cancellationwindow: jspb.Message.getFieldWithDefault(msg, 16, ""),
    cancellationcharges: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    enableloyalty: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 19, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessServiceGetByIdResponse}
 */
proto.appointment.BusinessServiceGetByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessServiceGetByIdResponse;
  return proto.appointment.BusinessServiceGetByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessServiceGetByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessServiceGetByIdResponse}
 */
proto.appointment.BusinessServiceGetByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceduration(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFees(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstaxable(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTaxrate(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaymentrequired(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentpercent(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriorbookingwindow(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendreminder(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setReminderwindow(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemindertype(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowcancellation(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancellationwindow(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCancellationcharges(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableloyalty(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessServiceGetByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessServiceGetByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceGetByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getServiceduration();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFees();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getIstaxable();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTaxrate();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getPaymentrequired();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPaymentpercent();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPriorbookingwindow();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSendreminder();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getReminderwindow();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRemindertype();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAllowcancellation();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getCancellationwindow();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCancellationcharges();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getEnableloyalty();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Description = 4;
 * @return {string}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ServiceDuration = 5;
 * @return {string}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getServiceduration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setServiceduration = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional float Fees = 6;
 * @return {number}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getFees = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setFees = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional bool IsTaxable = 7;
 * @return {boolean}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getIstaxable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setIstaxable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional float TaxRate = 8;
 * @return {number}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getTaxrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setTaxrate = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional bool PaymentRequired = 9;
 * @return {boolean}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getPaymentrequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setPaymentrequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 PaymentPercent = 10;
 * @return {number}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getPaymentpercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setPaymentpercent = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string PriorBookingWindow = 11;
 * @return {string}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getPriorbookingwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setPriorbookingwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool SendReminder = 12;
 * @return {boolean}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getSendreminder = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setSendreminder = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string ReminderWindow = 13;
 * @return {string}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getReminderwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setReminderwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string ReminderType = 14;
 * @return {string}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getRemindertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setRemindertype = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool AllowCancellation = 15;
 * @return {boolean}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getAllowcancellation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setAllowcancellation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string CancellationWindow = 16;
 * @return {string}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getCancellationwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setCancellationwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional float CancellationCharges = 17;
 * @return {number}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getCancellationcharges = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setCancellationcharges = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional bool EnableLoyalty = 18;
 * @return {boolean}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getEnableloyalty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setEnableloyalty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool IsActive = 19;
 * @return {boolean}
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceGetByIdResponse} returns this
 */
proto.appointment.BusinessServiceGetByIdResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessServiceCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessServiceCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    serviceduration: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fees: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    istaxable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    taxrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    paymentrequired: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    paymentpercent: jspb.Message.getFieldWithDefault(msg, 10, 0),
    priorbookingwindow: jspb.Message.getFieldWithDefault(msg, 11, ""),
    sendreminder: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    reminderwindow: jspb.Message.getFieldWithDefault(msg, 13, ""),
    remindertype: jspb.Message.getFieldWithDefault(msg, 14, ""),
    allowcancellation: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    cancellationwindow: jspb.Message.getFieldWithDefault(msg, 16, ""),
    cancellationcharges: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    enableloyalty: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 19, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessServiceCreateResponse}
 */
proto.appointment.BusinessServiceCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessServiceCreateResponse;
  return proto.appointment.BusinessServiceCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessServiceCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessServiceCreateResponse}
 */
proto.appointment.BusinessServiceCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceduration(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFees(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstaxable(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTaxrate(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaymentrequired(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentpercent(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriorbookingwindow(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendreminder(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setReminderwindow(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemindertype(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowcancellation(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancellationwindow(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCancellationcharges(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableloyalty(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessServiceCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessServiceCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getServiceduration();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFees();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getIstaxable();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTaxrate();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getPaymentrequired();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPaymentpercent();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPriorbookingwindow();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSendreminder();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getReminderwindow();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRemindertype();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAllowcancellation();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getCancellationwindow();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCancellationcharges();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getEnableloyalty();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Description = 4;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ServiceDuration = 5;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getServiceduration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setServiceduration = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional float Fees = 6;
 * @return {number}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getFees = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setFees = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional bool IsTaxable = 7;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getIstaxable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setIstaxable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional float TaxRate = 8;
 * @return {number}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getTaxrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setTaxrate = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional bool PaymentRequired = 9;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getPaymentrequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setPaymentrequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 PaymentPercent = 10;
 * @return {number}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getPaymentpercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setPaymentpercent = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string PriorBookingWindow = 11;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getPriorbookingwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setPriorbookingwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool SendReminder = 12;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getSendreminder = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setSendreminder = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string ReminderWindow = 13;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getReminderwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setReminderwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string ReminderType = 14;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getRemindertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setRemindertype = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool AllowCancellation = 15;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getAllowcancellation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setAllowcancellation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string CancellationWindow = 16;
 * @return {string}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getCancellationwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setCancellationwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional float CancellationCharges = 17;
 * @return {number}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getCancellationcharges = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setCancellationcharges = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional bool EnableLoyalty = 18;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getEnableloyalty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setEnableloyalty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool IsActive = 19;
 * @return {boolean}
 */
proto.appointment.BusinessServiceCreateResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceCreateResponse} returns this
 */
proto.appointment.BusinessServiceCreateResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessServiceUpdateModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessServiceUpdateModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceUpdateModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    serviceduration: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fees: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    istaxable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    taxrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    paymentrequired: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    paymentpercent: jspb.Message.getFieldWithDefault(msg, 10, 0),
    priorbookingwindow: jspb.Message.getFieldWithDefault(msg, 11, ""),
    sendreminder: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    reminderwindow: jspb.Message.getFieldWithDefault(msg, 13, ""),
    remindertype: jspb.Message.getFieldWithDefault(msg, 14, ""),
    allowcancellation: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    cancellationwindow: jspb.Message.getFieldWithDefault(msg, 16, ""),
    cancellationcharges: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    enableloyalty: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 19, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessServiceUpdateModel}
 */
proto.appointment.BusinessServiceUpdateModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessServiceUpdateModel;
  return proto.appointment.BusinessServiceUpdateModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessServiceUpdateModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessServiceUpdateModel}
 */
proto.appointment.BusinessServiceUpdateModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceduration(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFees(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstaxable(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTaxrate(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaymentrequired(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentpercent(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriorbookingwindow(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendreminder(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setReminderwindow(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemindertype(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowcancellation(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancellationwindow(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCancellationcharges(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableloyalty(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessServiceUpdateModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessServiceUpdateModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceUpdateModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getServiceduration();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFees();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getIstaxable();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTaxrate();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getPaymentrequired();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPaymentpercent();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPriorbookingwindow();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSendreminder();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getReminderwindow();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRemindertype();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAllowcancellation();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getCancellationwindow();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCancellationcharges();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getEnableloyalty();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Description = 4;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ServiceDuration = 5;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getServiceduration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setServiceduration = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional float Fees = 6;
 * @return {number}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getFees = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setFees = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional bool IsTaxable = 7;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getIstaxable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setIstaxable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional float TaxRate = 8;
 * @return {number}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getTaxrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setTaxrate = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional bool PaymentRequired = 9;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getPaymentrequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setPaymentrequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 PaymentPercent = 10;
 * @return {number}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getPaymentpercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setPaymentpercent = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string PriorBookingWindow = 11;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getPriorbookingwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setPriorbookingwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool SendReminder = 12;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getSendreminder = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setSendreminder = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string ReminderWindow = 13;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getReminderwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setReminderwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string ReminderType = 14;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getRemindertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setRemindertype = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool AllowCancellation = 15;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getAllowcancellation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setAllowcancellation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string CancellationWindow = 16;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getCancellationwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setCancellationwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional float CancellationCharges = 17;
 * @return {number}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getCancellationcharges = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setCancellationcharges = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional bool EnableLoyalty = 18;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getEnableloyalty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setEnableloyalty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool IsActive = 19;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateModel} returns this
 */
proto.appointment.BusinessServiceUpdateModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessServiceUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessServiceUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    serviceduration: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fees: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    istaxable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    taxrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    paymentrequired: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    paymentpercent: jspb.Message.getFieldWithDefault(msg, 10, 0),
    priorbookingwindow: jspb.Message.getFieldWithDefault(msg, 11, ""),
    sendreminder: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    reminderwindow: jspb.Message.getFieldWithDefault(msg, 13, ""),
    remindertype: jspb.Message.getFieldWithDefault(msg, 14, ""),
    allowcancellation: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    cancellationwindow: jspb.Message.getFieldWithDefault(msg, 16, ""),
    cancellationcharges: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    enableloyalty: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 19, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessServiceUpdateResponse}
 */
proto.appointment.BusinessServiceUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessServiceUpdateResponse;
  return proto.appointment.BusinessServiceUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessServiceUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessServiceUpdateResponse}
 */
proto.appointment.BusinessServiceUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceduration(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFees(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstaxable(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTaxrate(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaymentrequired(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentpercent(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriorbookingwindow(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendreminder(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setReminderwindow(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemindertype(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowcancellation(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancellationwindow(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCancellationcharges(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableloyalty(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessServiceUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessServiceUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getServiceduration();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFees();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getIstaxable();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTaxrate();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getPaymentrequired();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPaymentpercent();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPriorbookingwindow();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSendreminder();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getReminderwindow();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRemindertype();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAllowcancellation();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getCancellationwindow();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCancellationcharges();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getEnableloyalty();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Description = 4;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ServiceDuration = 5;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getServiceduration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setServiceduration = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional float Fees = 6;
 * @return {number}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getFees = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setFees = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional bool IsTaxable = 7;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getIstaxable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setIstaxable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional float TaxRate = 8;
 * @return {number}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getTaxrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setTaxrate = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional bool PaymentRequired = 9;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getPaymentrequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setPaymentrequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 PaymentPercent = 10;
 * @return {number}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getPaymentpercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setPaymentpercent = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string PriorBookingWindow = 11;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getPriorbookingwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setPriorbookingwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool SendReminder = 12;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getSendreminder = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setSendreminder = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string ReminderWindow = 13;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getReminderwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setReminderwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string ReminderType = 14;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getRemindertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setRemindertype = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool AllowCancellation = 15;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getAllowcancellation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setAllowcancellation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string CancellationWindow = 16;
 * @return {string}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getCancellationwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setCancellationwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional float CancellationCharges = 17;
 * @return {number}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getCancellationcharges = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setCancellationcharges = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional bool EnableLoyalty = 18;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getEnableloyalty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setEnableloyalty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool IsActive = 19;
 * @return {boolean}
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceUpdateResponse} returns this
 */
proto.appointment.BusinessServiceUpdateResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessServiceSearchModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessServiceSearchModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessServiceSearchModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceSearchModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessServiceSearchModel}
 */
proto.appointment.BusinessServiceSearchModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessServiceSearchModel;
  return proto.appointment.BusinessServiceSearchModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessServiceSearchModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessServiceSearchModel}
 */
proto.appointment.BusinessServiceSearchModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessServiceSearchModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessServiceSearchModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessServiceSearchModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceSearchModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string businessNodeId = 1;
 * @return {string}
 */
proto.appointment.BusinessServiceSearchModel.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceSearchModel} returns this
 */
proto.appointment.BusinessServiceSearchModel.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.appointment.BusinessServiceSearchModel.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceSearchModel} returns this
 */
proto.appointment.BusinessServiceSearchModel.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isActive = 3;
 * @return {boolean}
 */
proto.appointment.BusinessServiceSearchModel.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceSearchModel} returns this
 */
proto.appointment.BusinessServiceSearchModel.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessServiceSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessServiceSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    businessnodeid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    serviceduration: jspb.Message.getFieldWithDefault(msg, 5, ""),
    fees: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    istaxable: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    taxrate: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    paymentrequired: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    paymentpercent: jspb.Message.getFieldWithDefault(msg, 10, 0),
    priorbookingwindow: jspb.Message.getFieldWithDefault(msg, 11, ""),
    sendreminder: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    reminderwindow: jspb.Message.getFieldWithDefault(msg, 13, ""),
    remindertype: jspb.Message.getFieldWithDefault(msg, 14, ""),
    allowcancellation: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    cancellationwindow: jspb.Message.getFieldWithDefault(msg, 16, ""),
    cancellationcharges: jspb.Message.getFloatingPointFieldWithDefault(msg, 17, 0.0),
    enableloyalty: jspb.Message.getBooleanFieldWithDefault(msg, 18, false),
    isactive: jspb.Message.getBooleanFieldWithDefault(msg, 19, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessServiceSearchResponse}
 */
proto.appointment.BusinessServiceSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessServiceSearchResponse;
  return proto.appointment.BusinessServiceSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessServiceSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessServiceSearchResponse}
 */
proto.appointment.BusinessServiceSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessnodeid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setServiceduration(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFees(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIstaxable(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTaxrate(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaymentrequired(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPaymentpercent(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriorbookingwindow(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSendreminder(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setReminderwindow(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setRemindertype(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowcancellation(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCancellationwindow(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCancellationcharges(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableloyalty(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsactive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessServiceSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessServiceSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBusinessnodeid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getServiceduration();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFees();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getIstaxable();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTaxrate();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getPaymentrequired();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPaymentpercent();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPriorbookingwindow();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getSendreminder();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getReminderwindow();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRemindertype();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAllowcancellation();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getCancellationwindow();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getCancellationcharges();
  if (f !== 0.0) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = message.getEnableloyalty();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getIsactive();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string BusinessNodeId = 2;
 * @return {string}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getBusinessnodeid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setBusinessnodeid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Name = 3;
 * @return {string}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Description = 4;
 * @return {string}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string ServiceDuration = 5;
 * @return {string}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getServiceduration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setServiceduration = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional float Fees = 6;
 * @return {number}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getFees = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setFees = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional bool IsTaxable = 7;
 * @return {boolean}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getIstaxable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setIstaxable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional float TaxRate = 8;
 * @return {number}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getTaxrate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setTaxrate = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional bool PaymentRequired = 9;
 * @return {boolean}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getPaymentrequired = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setPaymentrequired = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 PaymentPercent = 10;
 * @return {number}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getPaymentpercent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setPaymentpercent = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string PriorBookingWindow = 11;
 * @return {string}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getPriorbookingwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setPriorbookingwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bool SendReminder = 12;
 * @return {boolean}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getSendreminder = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setSendreminder = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string ReminderWindow = 13;
 * @return {string}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getReminderwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setReminderwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string ReminderType = 14;
 * @return {string}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getRemindertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setRemindertype = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool AllowCancellation = 15;
 * @return {boolean}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getAllowcancellation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setAllowcancellation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string CancellationWindow = 16;
 * @return {string}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getCancellationwindow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setCancellationwindow = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional float CancellationCharges = 17;
 * @return {number}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getCancellationcharges = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 17, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setCancellationcharges = function(value) {
  return jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional bool EnableLoyalty = 18;
 * @return {boolean}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getEnableloyalty = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setEnableloyalty = function(value) {
  return jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional bool IsActive = 19;
 * @return {boolean}
 */
proto.appointment.BusinessServiceSearchResponse.prototype.getIsactive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.appointment.BusinessServiceSearchResponse} returns this
 */
proto.appointment.BusinessServiceSearchResponse.prototype.setIsactive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessServiceDeleteModel.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessServiceDeleteModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessServiceDeleteModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceDeleteModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessServiceDeleteModel}
 */
proto.appointment.BusinessServiceDeleteModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessServiceDeleteModel;
  return proto.appointment.BusinessServiceDeleteModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessServiceDeleteModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessServiceDeleteModel}
 */
proto.appointment.BusinessServiceDeleteModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessServiceDeleteModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessServiceDeleteModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessServiceDeleteModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceDeleteModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessServiceDeleteModel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceDeleteModel} returns this
 */
proto.appointment.BusinessServiceDeleteModel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.appointment.BusinessServiceDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.appointment.BusinessServiceDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.appointment.BusinessServiceDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.appointment.BusinessServiceDeleteResponse}
 */
proto.appointment.BusinessServiceDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.appointment.BusinessServiceDeleteResponse;
  return proto.appointment.BusinessServiceDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.appointment.BusinessServiceDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.appointment.BusinessServiceDeleteResponse}
 */
proto.appointment.BusinessServiceDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.appointment.BusinessServiceDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.appointment.BusinessServiceDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.appointment.BusinessServiceDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.appointment.BusinessServiceDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.appointment.BusinessServiceDeleteResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.appointment.BusinessServiceDeleteResponse} returns this
 */
proto.appointment.BusinessServiceDeleteResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.appointment);
